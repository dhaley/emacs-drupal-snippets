# -*- mode: snippet -*-
# name: hook_node_search_result
# key: hook_node_search_result
# --
/**
 * ${2:Act on a node being displayed as a search result.
 *
 * This hook is invoked from node_search_execute(), after node_load()
 * and node_view() have been called.
 *}
 * @param $node
 *   The node being displayed in a search result.
 *
 * @return array
 *   Extra information to be displayed with search result. This information
 *   should be presented as an associative array. It will be concatenated
 *   with the post information (last updated, author) in the default search
 *   result theming.
 *
 * @see template_preprocess_search_result()
 * @see search-result.tpl.php
 *
 * @ingroup node_api_hooks
 */
function ${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`}_node_search_result($node) {
$0  $comments = db_query('SELECT comment_count FROM {node_comment_statistics} WHERE nid = :nid', array('nid' => $node->nid))->fetchField();
  return array('comment' => format_plural($comments, '1 comment', '@count comments'));
}
