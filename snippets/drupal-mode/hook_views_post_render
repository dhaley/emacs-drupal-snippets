# -*- mode: snippet -*-
# name: hook_views_post_render
# key: hook_views_post_render
# --
/**
 * ${2:Post process any rendered data.
 *
 * This can be valuable to be able to cache a view and still have some level of
 * dynamic output. In an ideal world, the actual output will include HTML
 * comment based tokens, and then the post process can replace those tokens.
 *
 * Example usage. If it is known that the view is a node view and that the
 * primary field will be a nid, you can do something like this:
 *
 * <!--post-FIELD-NID-->
 *
 * And then in the post render, create an array with the text that should
 * go there:
 *
 * strtr($output, array('<!--post-FIELD-1-->', 'output for FIELD of nid 1');
 *
 * All of the cached result data will be available in $view->result, as well,
 * so all ids used in the query should be discoverable.
 *
 * This hook can be utilized by themes.}
 */
function ${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`}_views_post_render(&$view, &$output, &$cache) {
$0
}
